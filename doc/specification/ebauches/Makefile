SRC_PLANTUML = $(realpath ../schemas/)
PLANTUML = java -jar /usr/share/plantuml/plantuml.jar
DEPEND_PLANTUML = ./build/.dependPlantUML
OUTPUT_PLANTUML = $(SRC_PLANTUML)#$(realpath ./build/eps/)
SRC_FILES := $(wildcard $(SRC_PLANTUML)/*.plantuml) $(wildcard $(SRC_PLANTUML)/**/*.plantuml)


PYAML_SCRIPTS_FOLDER = ../../python_yaml_tools
CONTEXT_GENERATOR_SCRIPT = $(PYAML_SCRIPTS_FOLDER)/context_and_interfaces/generate_context.py
CONTEXT_DATA_YAML_FILE = $(realpath ../../communs/data/context_data.yaml) # relative path to the YAML data
CONTEXT_DATA_PLANTUML_FILE = $(realpath ../schemas)/context_diagram.plantuml # relative path to desired PlantUML output
CONTEXT_DATA_LATEX_FILE = $(realpath sections/2.DescriptionGenerale)/2.2.2.2.interfaceAvecLesActeurs.tex # # relative path to desired LaTeX output
GENERATE_CONTEXT_DATA_COMMAND = python3 $(CONTEXT_GENERATOR_SCRIPT) $(CONTEXT_DATA_YAML_FILE) $(CONTEXT_DATA_PLANTUML_FILE) $(CONTEXT_DATA_LATEX_FILE)

all: latex

eps: $(DEPEND_PLANTUML)
	@echo -e "\n================================================================================\n"
	@echo "                               Start to generate EPS file"
	@echo -e "\n================================================================================\n"
	@$(MAKE) -j $(patsubst $(SRC)/%.plantuml,$(OUTPUT_PLANTUML)/%.$@,$(shell ls -1t $(SRC_FILES)))


$(OUTPUT_PLANTUML)/%.eps: $(SRC)/%.plantuml
	${PLANTUML} -teps -stdrpt:1 -recursive $< -o $(OUTPUT_PLANTUML)

$(DEPEND_PLANTUML): $(SRC_FILES)
	@find_includes() { \
		sed \
			-e "s,^[[:space:]]*!include \([^<].*[^>]\)$$,$${1}/\1," \
			-e t -e d "$$2" \
			| paste -sd " " -; \
	}; \
	echo "# GENERATED BY make depend" > $@; \
	echo "# DO NOT EDIT" >> $@; \
	echo >> $@; \
	for file in $^; do \
		name="$$(basename -s .plantuml "$$file")"; \
		includes="$$(find_includes "$(SRC_PLANTUML)" "$$file")"; \
		printf "$(OUTPUT_PLANTUML)/%s.eps: %s\n" "$$name" "$$includes"; \
	done >> $@

latex: pyaml
	@echo -e "\n================================================================================\n"
	@echo "                               Start to generate PDF file"
	@echo -e "\n================================================================================\n"
	@latexmk

pyaml:
	@echo -e "\n================================================================================\n"
	@echo "                      Start to generate context data from YAML file"
	@echo -e "\n================================================================================\n"
	@$(GENERATE_CONTEXT_DATA_COMMAND)

clean_eps:
	@rm -rf $(OUTPUT_PLANTUML)/**/*.eps $(OUTPUT_PLANTUML)/*.eps
	@rm -f $(DEPEND_PLANTUML)

clean_latex:
	@latexmk -c

clean_vscode:
	@rm -f *.toc *.out *.log *.lof *.ist *.glo *.fls *.fdb_latexmk *.aux *.acn *.synctex.gz *.pyg *.lol *.bcf *.xml *.acr *.alg *.bbl *.glg *.blg *.gls .dependPlantUML

clean: clean_eps clean_latex clean_vscode

.PHONY: all clean eps clean_eps latex clean_latex

-include $(DEPEND_PLANTUML)
